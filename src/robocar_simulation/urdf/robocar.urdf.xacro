<?xml version="1.0"?>
<robot name="robocar" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Robot dimensions and properties -->
  <xacro:property name="chassis_length" value="0.2"/>
  <xacro:property name="chassis_width" value="0.15"/>
  <xacro:property name="chassis_height" value="0.05"/>
  <xacro:property name="wheel_radius" value="0.035"/>
  <xacro:property name="wheel_width" value="0.02"/>
  <xacro:property name="wheel_mass" value="0.1"/>
  <xacro:property name="chassis_mass" value="1.0"/>
  
  <!-- Material definitions -->
  <material name="black">
    <color rgba="0.1 0.1 0.1 1.0"/>
  </material>
  <material name="gray">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>

  <!-- Base Link (Chassis) -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${chassis_mass}"/>
      <inertia 
        ixx="${chassis_mass * (chassis_width*chassis_width + chassis_height*chassis_height) / 12.0}" 
        ixy="0.0" 
        ixz="0.0" 
        iyy="${chassis_mass * (chassis_length*chassis_length + chassis_height*chassis_height) / 12.0}" 
        iyz="0.0" 
        izz="${chassis_mass * (chassis_length*chassis_length + chassis_width*chassis_width) / 12.0}"/>
    </inertial>
  </link>

  <!-- Wheels (Front Left, Front Right, Rear Left, Rear Right) -->
  <link name="front_left_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${wheel_mass}"/>
      <inertia 
        ixx="${wheel_mass * (3*wheel_radius*wheel_radius + wheel_width*wheel_width) / 12.0}" 
        ixy="0.0" 
        ixz="0.0" 
        iyy="${wheel_mass * (3*wheel_radius*wheel_radius + wheel_width*wheel_width) / 12.0}" 
        iyz="0.0" 
        izz="${wheel_mass * wheel_radius*wheel_radius / 2.0}"/>
    </inertial>
  </link>
  
  <joint name="front_left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="front_left_wheel"/>
    <origin xyz="${chassis_length/4} ${chassis_width/2+wheel_width/2} 0" rpy="${pi/2} 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <!-- Add Front Right, Rear Left, and Rear Right wheels similarly -->
  <link name="front_right_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${wheel_mass}"/>
      <inertia 
        ixx="${wheel_mass * (3*wheel_radius*wheel_radius + wheel_width*wheel_width) / 12.0}" 
        ixy="0.0" 
        ixz="0.0" 
        iyy="${wheel_mass * (3*wheel_radius*wheel_radius + wheel_width*wheel_width) / 12.0}" 
        iyz="0.0" 
        izz="${wheel_mass * wheel_radius*wheel_radius / 2.0}"/>
    </inertial>
  </link>
  
  <joint name="front_right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="front_right_wheel"/>
    <origin xyz="${chassis_length/4} ${-chassis_width/2-wheel_width/2} 0" rpy="${pi/2} 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <link name="rear_left_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${wheel_mass}"/>
      <inertia 
        ixx="${wheel_mass * (3*wheel_radius*wheel_radius + wheel_width*wheel_width) / 12.0}" 
        ixy="0.0" 
        ixz="0.0" 
        iyy="${wheel_mass * (3*wheel_radius*wheel_radius + wheel_width*wheel_width) / 12.0}" 
        iyz="0.0" 
        izz="${wheel_mass * wheel_radius*wheel_radius / 2.0}"/>
    </inertial>
  </link>
  
  <joint name="rear_left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="rear_left_wheel"/>
    <origin xyz="${-chassis_length/4} ${chassis_width/2+wheel_width/2} 0" rpy="${pi/2} 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <link name="rear_right_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${wheel_mass}"/>
      <inertia 
        ixx="${wheel_mass * (3*wheel_radius*wheel_radius + wheel_width*wheel_width) / 12.0}" 
        ixy="0.0" 
        ixz="0.0" 
        iyy="${wheel_mass * (3*wheel_radius*wheel_radius + wheel_width*wheel_width) / 12.0}" 
        iyz="0.0" 
        izz="${wheel_mass * wheel_radius*wheel_radius / 2.0}"/>
    </inertial>
  </link>
  
  <joint name="rear_right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="rear_right_wheel"/>
    <origin xyz="${-chassis_length/4} ${-chassis_width/2-wheel_width/2} 0" rpy="${pi/2} 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <!-- ================ GAZEBO PLUGINS ================ -->
  
  <!-- Differential drive controller -->
  <gazebo>
  <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
      <left_joint>front_left_wheel_joint</left_joint>
      <left_joint>rear_left_wheel_joint</left_joint>
      <right_joint>front_right_wheel_joint</right_joint>
      <right_joint>rear_right_wheel_joint</right_joint>
      <wheel_separation>${chassis_width + wheel_width}</wheel_separation>
      <wheel_radius>${wheel_radius}</wheel_radius>
      <odom_publish_frequency>30</odom_publish_frequency>
      <topic>/model/robocar/cmd_vel</topic>
      <min_velocity>-1.0</min_velocity>
      <max_linear_acceleration>5.0</max_linear_acceleration>
      <max_angular_acceleration>5.0</max_angular_acceleration>
      <max_linear_velocity>1.0</max_linear_velocity>
      <max_angular_velocity>2.0</max_angular_velocity>
    </plugin>
  </gazebo>

  <!-- Material properties for Gazebo -->
  <gazebo reference="base_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="front_left_wheel">
    <material>Gazebo/Grey</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
  </gazebo>

  <gazebo reference="front_right_wheel">
    <material>Gazebo/Grey</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
  </gazebo>

  <gazebo reference="rear_left_wheel">
    <material>Gazebo/Grey</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
  </gazebo>

  <gazebo reference="rear_right_wheel">
    <material>Gazebo/Grey</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
  </gazebo>
</robot>